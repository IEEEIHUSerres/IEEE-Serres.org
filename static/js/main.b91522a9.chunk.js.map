{"version":3,"sources":["assets/ieee-ihu-serres-logo.png","components/IEEENavBar.js","components/IEEELogo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","IEEENavBar","IEEELogo","id","src","Logo","fluid","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,kD,kRC2B5BC,I,uBCjBAC,MAJf,WACI,OAAQ,kBAAC,IAAD,CAAOC,GAAG,YAAYC,IAAKC,IAAMC,OAAK,KC8CnCC,MAvCf,WACI,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,UAAU,eACX,+CCRAC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b91522a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ieee-ihu-serres-logo.34bf3c0d.png\";","import Navbar from \"react-bootstrap/cjs/Navbar\";\nimport Nav from \"react-bootstrap/cjs/Nav\";\nimport NavDropdown from \"react-bootstrap/cjs/NavDropdown\";\nimport React from \"react\";\n\nfunction IEEENavBar() {\n    return (<Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n                <Nav.Link href=\"/\">Home</Nav.Link>\n                <NavDropdown title=\"News\" id=\"collasible-nav-dropdown\">\n                    <NavDropdown.Item href=\"/news/section\">Section</NavDropdown.Item>\n                    <NavDropdown.Item href=\"/news/branch\">Student Branch</NavDropdown.Item>\n                    <NavDropdown.Item href=\"/news/wie\">Women in Engineering Affinity Group</NavDropdown.Item>\n                    <NavDropdown.Item href=\"/news/ras\">Robotics and Automation Society Chapter</NavDropdown.Item>\n                    <NavDropdown.Item href=\"/news/cs\">Computer Society Chapter</NavDropdown.Item>\n                </NavDropdown>\n                <Nav.Link href=\"#events\">Events</Nav.Link>\n                <Nav.Link href=\"#officers\">Officers</Nav.Link>\n                <Nav.Link href=\"#about\">About</Nav.Link>\n                <Nav.Link href=\"#contact\">Contact</Nav.Link>\n            </Nav>\n        </Navbar.Collapse>\n    </Navbar>)\n}\n\nexport default IEEENavBar;\n","import Logo from \"../assets/ieee-ihu-serres-logo.png\";\nimport Image from \"react-bootstrap/cjs/Image\";\nimport React from \"react\";\n\nimport \"./IEEELogo.css\"\n\nfunction IEEELogo() {\n    return (<Image id=\"ieee-logo\" src={Logo} fluid/>)\n}\n\nexport default IEEELogo\n","import React from 'react';\nimport Image from \"react-bootstrap/cjs/Image\";\nimport Container from \"react-bootstrap/cjs/Container\";\nimport Row from \"react-bootstrap/cjs/Row\";\nimport Col from \"react-bootstrap/cjs/Col\";\nimport Logo from \"./assets/ieee-ihu-serres-logo.png\"\n\nimport './App.css';\nimport IEEENavBar from \"./components/IEEENavBar\";\nimport IEEELogo from \"./components/IEEELogo\";\nimport IEEEMainContent from \"./components/IEEEMainContent\";\nimport IEEESidebar from \"./components/IEEESidebar\";\nimport IEEEFooter from \"./components/IEEEFooter\";\n\nfunction App() {\n    return (\n        <Container>\n            <IEEELogo/>\n            <Row>\n                <Col className=\"text-center\">\n                    <h1>Coming Soon</h1>\n                </Col>\n            </Row>\n            {/*<IEEENavBar/>*/}\n            {/*<Row>*/}\n            {/*    <Col xs={2}/>*/}\n            {/*    <Col className=\"text-center\">*/}\n            {/*        <IEEELogo/>*/}\n            {/*    </Col>*/}\n            {/*    <Col xs={2}/>*/}\n            {/*</Row>*/}\n            {/*<Row>*/}\n            {/*    <Col className=\"text-center\">*/}\n            {/*        <IEEEMainContent/>*/}\n            {/*    </Col>*/}\n            {/*    <Col className=\"text-center\">*/}\n            {/*        <IEEESidebar/>*/}\n            {/*    </Col>*/}\n            {/*</Row>*/}\n            {/*<Row>*/}\n            {/*    <Col className=\"text-center\">FOOTER COL 1</Col>*/}\n            {/*    <Col className=\"text-center\">FOOTER COL 2</Col>*/}\n            {/*    <Col className=\"text-center\">FOOTER COL 3</Col>*/}\n            {/*</Row>*/}\n            {/*<Row>*/}\n            {/*    <Col className=\"text-center\">*/}\n            {/*        <IEEEFooter/>*/}\n            {/*    </Col>*/}\n            {/*</Row>*/}\n        </Container>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}